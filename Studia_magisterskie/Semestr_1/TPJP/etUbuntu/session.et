datatype Nat = Suc from Nat | O;

let one = Suc O;
let two = Suc one;
let three = Suc two;
let four = Suc three;
let five = Suc four;
let six = Suc five;

(*               is0 O = True               *)
(*         is0 (Suc m) = False              *)

let is0 = \n. _Natit n (\b.False) True;

(*                     Weryfikacja                    *)

is0 O = True;
\n.is0 (Suc n) = \n.False;

(*            add O n = n                  *)
(*      add (Suc m) n = Suc (add m n)      *)

let add = \m n. _Natit m Suc n;

(*                     Weryfikacja                    *)

\n.add O n = \n.n;
\m n.add (Suc m) n = \m n.Suc (add m n);
let add = \m n. _Natit m Suc n;

