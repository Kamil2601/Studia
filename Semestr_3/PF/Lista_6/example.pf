Goal modus_ponens_s : A /\ (A => B) => B =
  [A /\ (A => B) :
   A;
   A => B;
   B];
  A /\ (A => B) => B

Goal modus_ponens_t : A ∧ (A ⇒ B) ⇒ B =
  ImplI ([A ∧ (A ⇒ B) :
    ImplE (ConjEL (Ax (A ∧ (A ⇒ B))),
           ConjER (Ax (A ∧ (A ⇒ B))))])

Goal example_a : (A \/ B) /\ (A => C) /\ (B => C) => C =
    [(A \/ B) /\ (A => C) /\ (B => C) :
        (A \/ B) /\ (A => C);
        (A \/ B);
        (B => C);
        [A:
            C];
        [B:
            C];
        C
    ];
    (A \/ B) /\ (A => C) /\ (B => C) => C

Goal correct_aa : A => A = 
    ImplI([A:
            Ax (A)
    ])

Goal correct_ab : A => A = 
    [A :
    A];
    A => A

Goal wrong_ba : A => B = 
    ImplI([A:
            Ax (B)
    ])

Goal wrong_bb : A => B = 
    [A :
    B];
    A => A

Goal correct_ca : (A /\ B) => A = 
    ImplI([A /\ B: 
      ConjEL( Ax(A /\ B))])

Goal correct_cb : (A /\ B) => A = 
  [ A /\ B :
    A];
  A /\ B => A

Goal wrong_ca : (A /\ B) => C = 
    ImplI([A /\ B: 
      ConjEL( Ax(A /\ B))])

Goal wrong_cb : (A /\ B) => C = 
  [ A /\ B :
    C];
  A /\ B => C

Goal correct_da : A /\ (A => B) /\ (A => C) => (B /\ C) = 
  ImplI([A /\ (A => B) /\ (A => C) : 
          ConjI(ImplE(ConjEL(ConjEL(Ax(A /\ (A => B) /\ (A => C)))),
                      ConjER(ConjEL(Ax(A /\ (A => B) /\ (A => C))))),
                ImplE(ConjEL(ConjEL(Ax(A /\ (A => B) /\ (A => C)))),
                      ConjER(Ax(A /\ (A => B) /\ (A => C)))))])


Goal correct_db : A /\ (A => B) /\ (A => C) => (B /\ C) =
  [ A /\ (A => B) /\ (A => C) : 
    A => C;
    A /\ (A => B);
    A;
    A => B;
    B;
    C;
    B /\ C
  ];
  A /\ (A => B) /\ (A => C) => (B /\ C)


Goal wrong_da : A /\ (A => B) /\ (A => C) => (B /\ C) = 
  ImplI([A /\ (A => B) /\ (A => C) : 
          ConjI(ImplE(ConjEL(ConjEL(Ax(A /\ (A => B) /\ (A => C)))),
                      ConjEL(ConjEL(Ax(A /\ (A => B) /\ (A => C))))),
                ImplE(ConjEL(ConjEL(Ax(A /\ (A => B) /\ (A => C)))),
                      ConjER(Ax(A /\ (A => B) /\ (A => C)))))])


Goal wrong_db : A /\ (A => B) /\ (A => C) => (B /\ C) =
  [ A /\ (A => B) /\ (A => C) : 
    A => C;
    A /\ (A => B);
    A;
    A => B;
    B;
    C;
    B \/ C
  ];
  A /\ (A => B) /\ (A => C) => (B /\ C)

Goal correct_ea : (A \/ B) /\ (A => C) /\ (B => C) => C = 
  ImplI([ (A \/ B) /\ (A => C) /\ (B => C) :
        DisjE( ConjEL(ConjEL(Ax((A \/ B) /\ (A => C) /\ (B => C)))),
              [A :
               ImplE(Ax(A), ConjER(ConjEL(Ax((A \/ B) /\ (A => C) /\ (B => C)))) )],
              [B :
               ImplE(Ax(B), ConjER(Ax((A \/ B) /\ (A => C) /\ (B => C))) )])])
  

Goal correct_eb : (A \/ B) /\ (A => C) /\ (B => C) => C = 
  [ (A \/ B) /\ (A => C) /\ (B => C) : 
    (A \/ B) /\ (A => C);
    (A \/ B);
    (A => C);
    (B => C);
    C];
    (A \/ B) /\ (A => C) /\ (B => C) => C



